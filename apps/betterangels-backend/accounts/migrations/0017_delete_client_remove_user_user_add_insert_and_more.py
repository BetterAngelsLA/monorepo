# Generated by Django 5.0.4 on 2024-05-07 14:00

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0016_alter_clientprofile_hmis_id"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.DeleteModel(
            name="Client",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="user",
            name="user_add_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="user",
            name="user_update_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="user",
            name="user_remove_delete",
        ),
        migrations.AddField(
            model_name="user",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="userevent",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                db_constraint=False,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="contenttypes.contenttype",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="user",
            trigger=pgtrigger.compiler.Trigger(
                name="user_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "accounts_userevent" ("date_joined", "email", "first_name", "id", "is_active", "is_staff", "is_superuser", "last_login", "last_name", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "polymorphic_ctype_id", "username") VALUES (NEW."date_joined", NEW."email", NEW."first_name", NEW."id", NEW."is_active", NEW."is_staff", NEW."is_superuser", NEW."last_login", NEW."last_name", NEW."password", _pgh_attach_context(), NOW(), \'user.add\', NEW."id", NEW."polymorphic_ctype_id", NEW."username"); RETURN NULL;',
                    hash="9bde13405c907524f1e1604dcdcba6917b560156",
                    operation="INSERT",
                    pgid="pgtrigger_user_add_insert_b8dc2",
                    table="accounts_user",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="user",
            trigger=pgtrigger.compiler.Trigger(
                name="user_update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "accounts_userevent" ("date_joined", "email", "first_name", "id", "is_active", "is_staff", "is_superuser", "last_login", "last_name", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "polymorphic_ctype_id", "username") VALUES (NEW."date_joined", NEW."email", NEW."first_name", NEW."id", NEW."is_active", NEW."is_staff", NEW."is_superuser", NEW."last_login", NEW."last_name", NEW."password", _pgh_attach_context(), NOW(), \'user.update\', NEW."id", NEW."polymorphic_ctype_id", NEW."username"); RETURN NULL;',
                    hash="4e1b8045db36a9557ef6b4f31f4349b7cd716960",
                    operation="UPDATE",
                    pgid="pgtrigger_user_update_update_3ce0f",
                    table="accounts_user",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="user",
            trigger=pgtrigger.compiler.Trigger(
                name="user_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "accounts_userevent" ("date_joined", "email", "first_name", "id", "is_active", "is_staff", "is_superuser", "last_login", "last_name", "password", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "polymorphic_ctype_id", "username") VALUES (OLD."date_joined", OLD."email", OLD."first_name", OLD."id", OLD."is_active", OLD."is_staff", OLD."is_superuser", OLD."last_login", OLD."last_name", OLD."password", _pgh_attach_context(), NOW(), \'user.remove\', OLD."id", OLD."polymorphic_ctype_id", OLD."username"); RETURN NULL;',
                    hash="b26fddfcd800392b8fda7512c7e5624069262254",
                    operation="DELETE",
                    pgid="pgtrigger_user_remove_delete_b47e3",
                    table="accounts_user",
                    when="AFTER",
                ),
            ),
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "user_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("accounts.user",),
        ),
        migrations.AlterField(
            model_name="ClientUserObjectPermission",
            name="content_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_user_object_permission",
                to="accounts.client",
            ),
        ),
        migrations.AlterField(
            model_name="ClientGroupObjectPermission",
            name="content_object",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="client_group_object_permission",
                to="accounts.client",
            ),
        ),
    ]
