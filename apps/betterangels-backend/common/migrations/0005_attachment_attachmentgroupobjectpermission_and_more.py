# Generated by Django 4.2.11 on 2024-03-14 23:51

import common.enums
from common.permissions.enums import AttachmentPermissions
import common.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_choices_field.fields

# Generate readable names based on the enum
PERM_MAP = {
    perm.split(".")[1]: "Can " + perm.name.lower().replace("_", " ") + " task"
    for perm in AttachmentPermissions
}


def create_permissions_if_not_exist(apps, schema_editor):
    Attachment = apps.get_model("common", "Attachment")
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")
    AttachmentContentType = ContentType.objects.get_for_model(Attachment)
    db_alias = schema_editor.connection.alias

    for codename, name in PERM_MAP.items():
        Permission.objects.using(db_alias).get_or_create(
            codename=codename,
            defaults={"name": name, "content_type": AttachmentContentType},
        )


def update_caseworker_permission_template(apps, schema_editor):
    PermissionGroupTemplate = apps.get_model("accounts", "PermissionGroupTemplate")
    Permission = apps.get_model("auth", "Permission")
    caseworker_template = PermissionGroupTemplate.objects.get(name="Caseworker")

    perm_map = [
        perm.split(".")[1]
        for perm in [
            AttachmentPermissions.ADD,
        ]
    ]

    permissions = Permission.objects.filter(codename__in=perm_map)
    caseworker_template.permissions.add(*permissions)


def revert_caseworker_permission_template(apps, schema_editor):
    PermissionGroupTemplate = apps.get_model("accounts", "PermissionGroupTemplate")
    Permission = apps.get_model("auth", "Permission")
    caseworker_template = PermissionGroupTemplate.objects.get(name="Caseworker")

    perm_map = [
        perm.split(".")[1]
        for perm in [
            AttachmentPermissions.ADD,
        ]
    ]

    permissions = Permission.objects.filter(codename__in=perm_map)
    caseworker_template.permissions.remove(*permissions)


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("common", "0004_remove_simplemodel"),
        ("notes", "0005_alter_note_options_note_organization_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("file", models.FileField(upload_to=common.utils.get_unique_file_path)),
                (
                    "file_type",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("image", "Image"),
                            ("document", "Document"),
                            ("audio", "Audio"),
                            ("video", "Video"),
                            ("unknown", "Unknown"),
                        ],
                        choices_enum=common.enums.FileType,
                        max_length=8,
                    ),
                ),
                (
                    "original_filename",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("object_id", models.PositiveIntegerField()),
                ("namespace", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "associated_with",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="associated_attachments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_attachments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AttachmentGroupObjectPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.attachment",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.group"
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("group", "permission", "content_object")},
            },
        ),
        migrations.CreateModel(
            name="AttachmentUserObjectPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_object",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.attachment",
                    ),
                ),
                (
                    "permission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.permission",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "unique_together": {("user", "permission", "content_object")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="simplemodelgroupobjectpermission",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="simplemodelgroupobjectpermission",
            name="content_object",
        ),
        migrations.RemoveField(
            model_name="simplemodelgroupobjectpermission",
            name="group",
        ),
        migrations.RemoveField(
            model_name="simplemodelgroupobjectpermission",
            name="permission",
        ),
        migrations.AlterUniqueTogether(
            name="simplemodeluserobjectpermission",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="simplemodeluserobjectpermission",
            name="content_object",
        ),
        migrations.RemoveField(
            model_name="simplemodeluserobjectpermission",
            name="permission",
        ),
        migrations.RemoveField(
            model_name="simplemodeluserobjectpermission",
            name="user",
        ),
        migrations.AlterField(
            model_name="location",
            name="id",
            field=models.BigAutoField(
                editable=False, primary_key=True, serialize=False, unique=True
            ),
        ),
        migrations.DeleteModel(
            name="SimpleModel",
        ),
        migrations.DeleteModel(
            name="SimpleModelGroupObjectPermission",
        ),
        migrations.DeleteModel(
            name="SimpleModelUserObjectPermission",
        ),
        migrations.AddIndex(
            model_name="attachment",
            index=models.Index(
                fields=["object_id", "content_type_id", "namespace", "file_type"],
                name="attachment_comp_idx",
            ),
        ),
        migrations.RunPython(create_permissions_if_not_exist),
        migrations.RunPython(
            update_caseworker_permission_template, revert_caseworker_permission_template
        ),
    ]
