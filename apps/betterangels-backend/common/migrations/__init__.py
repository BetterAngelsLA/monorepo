# Generated by Django 4.2.8 on 2023-12-12 19:32

from common.permissions.enums import SimpleModelPermissions
from django.conf import settings
from django.db import migrations, models


def create_permissions_if_not_exist(apps, schema_editor):
    Note = apps.get_model("common", "SimpleModel")
    ContentType = apps.get_model("contenttypes", "ContentType")
    Permission = apps.get_model("auth", "Permission")

    note_content_type, _ = ContentType.objects.get_for_model(
        Note, for_concrete_model=False
    )

    permissions_to_add = [
        SimpleModelPermissions.VIEW,
        SimpleModelPermissions.CHANGE,
        SimpleModelPermissions.DELETE,
        SimpleModelPermissions.ADD,
    ]

    for perm in permissions_to_add:
        # Split the enum value to get the codename without the app label
        codename = perm.value.split(".")[-1]
        # Generate a human-readable name for the permission
        name = "Can " + perm.name.lower().replace("_", " ") + " simplemodel"

        Permission.objects.get_or_create(
            codename=codename,
            defaults={
                "name": name,
                "content_type": note_content_type,
            },
        )


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SimpleModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
    ]
