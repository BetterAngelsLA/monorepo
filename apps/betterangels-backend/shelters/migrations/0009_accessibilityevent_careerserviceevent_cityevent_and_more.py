# Generated by Django 5.0.7 on 2024-08-15 19:49

import django.core.validators
import django.db.models.deletion
import django_choices_field.fields
import django_ckeditor_5.fields
import pgtrigger.compiler
import pgtrigger.migrations
import phonenumber_field.modelfields
import shelters.enums
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0014_address_confidential_attachment_mime_type_and_more"),
        ("organizations", "0006_alter_organization_slug"),
        ("pghistory", "0006_delete_aggregateevent"),
        ("shelters", "0008_alter_funder_name_alter_population_name_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccessibilityEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("medical_equipment_permitted", "Medical Equipment Permitted"),
                            ("wheelchair_accessible", "Wheelchair Accessible"),
                        ],
                        choices_enum=shelters.enums.AccessibilityChoices,
                        max_length=27,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CareerServiceEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("job_training", "Job Training"),
                            ("life_skills_training", "Life Skills Training"),
                            ("tutoring", "Tutoring"),
                        ],
                        choices_enum=shelters.enums.CareerServiceChoices,
                        max_length=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CityEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("agoura_hills", "Agoura Hills"),
                            ("alhambra", "Alhambra"),
                            ("arcadia", "Arcadia"),
                            ("artesia", "Artesia"),
                            ("avalon", "Avalon"),
                            ("azusa", "Azusa"),
                            ("baldwin_park", "Baldwin Park"),
                            ("bell", "Bell"),
                            ("bellflower", "Bellflower"),
                            ("bell_gardens", "Bell Gardens"),
                            ("beverly_hills", "Beverly Hills"),
                            ("bradbury", "Bradbury"),
                            ("burbank", "Burbank"),
                            ("calabasas", "Calabasas"),
                            ("carson", "Carson"),
                            ("cerritos", "Cerritos"),
                            ("claremont", "Claremont"),
                            ("commerce", "Commerce"),
                            ("compton", "Compton"),
                            ("covina", "Covina"),
                            ("cudahy", "Cudahy"),
                            ("culver_city", "Culver City"),
                            ("diamond_bar", "Diamond Bar"),
                            ("downey", "Downey"),
                            ("duarte", "Duarte"),
                            ("el_monte", "El Monte"),
                            ("el_segundo", "El Segundo"),
                            ("gardena", "Gardena"),
                            ("glendale", "Glendale"),
                            ("glendora", "Glendora"),
                            ("hawaiian_gardens", "Hawaiian Gardens"),
                            ("hawthorne", "Hawthorne"),
                            ("hermosa_beach", "Hermosa Beach"),
                            ("hidden_hills", "Hidden Hills"),
                            ("hollywood", "Hollywood"),
                            ("huntington_park", "Huntington Park"),
                            ("industry", "Industry"),
                            ("inglewood", "Inglewood"),
                            ("irwindale", "Irwindale"),
                            ("la_canada_flintridge", "La Canada Flintridge"),
                            ("la_habra_heights", "La Habra Heights"),
                            ("la_mirada", "La Mirada"),
                            ("la_puente", "La Puente"),
                            ("la_verne", "La Verne"),
                            ("lakewood", "Lakewood"),
                            ("lancaster", "Lancaster"),
                            ("lawndale", "Lawndale"),
                            ("lomita", "Lomita"),
                            ("long_beach", "Long Beach"),
                            ("los_angeles", "Los Angeles"),
                            ("lynwood", "Lynwood"),
                            ("malibu", "Malibu"),
                            ("manhattan_beach", "Manhattan Beach"),
                            ("maywood", "Maywood"),
                            ("monrovia", "Monrovia"),
                            ("montebello", "Montebello"),
                            ("monterey_park", "Monterey Park"),
                            ("norwalk", "Norwalk"),
                            ("palmdale", "Palmdale"),
                            ("palos_verdes_estates", "Palos Verdes Estates"),
                            ("paramount", "Paramount"),
                            ("pasadena", "Pasadena"),
                            ("pico_rivera", "Pico Rivera"),
                            ("pomona", "Pomona"),
                            ("rancho_palos_verdes", "Rancho Palos Verdes"),
                            ("redondo_beach", "Redondo Beach"),
                            ("rolling_hills", "Rolling Hills"),
                            ("rolling_hills_estates", "Rolling Hills Estates"),
                            ("rosemead", "Rosemead"),
                            ("san_dimas", "San Dimas"),
                            ("san_fernando", "San Fernando"),
                            ("san_gabriel", "San Gabriel"),
                            ("san_marino", "San Marino"),
                            ("santa_clarita", "Santa Clarita"),
                            ("santa_fe_springs", "Santa Fe Springs"),
                            ("santa_monica", "Santa Monica"),
                            ("sierra_madre", "Sierra Madre"),
                            ("signal_hill", "Signal Hill"),
                            ("south_el_monte", "South El Monte"),
                            ("south_gate", "South Gate"),
                            ("south_pasadena", "South Pasadena"),
                            ("temple_city", "Temple City"),
                            ("torrance", "Torrance"),
                            ("vernon", "Vernon"),
                            ("venice", "Venice"),
                            ("walnut", "Walnut"),
                            ("west_covina", "West Covina"),
                            ("west_hollywood", "West Hollywood"),
                            ("westlake_village", "Westlake Village"),
                            ("west_los_angeles", "West Los Angeles"),
                            ("whittier", "Whittier"),
                        ],
                        choices_enum=shelters.enums.CityChoices,
                        max_length=21,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EntryRequirementEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("medicaid_or_medicare", "Medicaid or Medicare"),
                            ("photo_id", "Photo ID"),
                            ("referral", "Referral"),
                            ("reservation", "Reservation"),
                        ],
                        choices_enum=shelters.enums.EntryRequirementChoices,
                        max_length=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FunderEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("city_of_los_angeles", "City of Los Angeles"),
                            ("dhs", "DHS"),
                            ("dmh", "DMH"),
                            ("federal_funding", "Federal Funding"),
                            ("hopwa", "HOPWA"),
                            ("lahsa", "LAHSA"),
                            ("private", "Private"),
                        ],
                        choices_enum=shelters.enums.FunderChoices,
                        max_length=19,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GeneralServiceEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("case_management", "Case Management"),
                            ("childcare", "Childcare"),
                            ("computers", "Computers"),
                            ("financial_literacy_assistance", "Financial Literacy/Assistance"),
                            ("housing_navigation", "Housing Navigation"),
                            ("legal_assistance", "Legal Assistance"),
                            ("mail", "Mail"),
                            ("phone", "Phone"),
                            ("transportation", "Transportation"),
                        ],
                        choices_enum=shelters.enums.GeneralServiceChoices,
                        max_length=29,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HealthServiceEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("medication_administration", "Medication Administration"),
                            ("medication_monitoring", "Medication Monitoring"),
                            ("mental_health", "Mental Health"),
                            ("substance_use_treatment", "Substance Use Treatment"),
                        ],
                        choices_enum=shelters.enums.HealthServiceChoices,
                        max_length=25,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ImmediateNeedEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[("clothing", "Clothing"), ("food", "Food"), ("showers", "Showers")],
                        choices_enum=shelters.enums.ImmediateNeedChoices,
                        max_length=8,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ParkingEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("auto_or_small_truck", "Auto or Small Truck"),
                            ("bicycle", "Bicycle"),
                            ("motorcycle", "Motorcycle"),
                            ("rv", "RV"),
                        ],
                        choices_enum=shelters.enums.ParkingChoices,
                        max_length=19,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PetEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("cats", "Cats"),
                            ("dogs_over_25lbs", "Dogs >25lbs"),
                            ("dogs_under_25lbs", "Dogs <25lbs"),
                            ("emotional_support", "Emotional Support"),
                            ("exotics", "Exotics"),
                            ("service_animal", "Service Animal"),
                        ],
                        choices_enum=shelters.enums.PetChoices,
                        max_length=17,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PopulationEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("adults", "Adults"),
                            ("boys", "Boys"),
                            ("children", "Children"),
                            ("domestic_violence", "Domestic Violence (DV/IPV)"),
                            ("enhanced_bridge_housing_older_adults", "Enhanced Bridge Housing for Older Adults"),
                            ("enhanced_bridge_housing_women", "Enhanced Bridge Housing for Women"),
                            ("families", "Families"),
                            ("girls", "Girls"),
                            ("hiv_and_aids", "HIV/AIDS"),
                            ("human_trafficking", "Human Trafficking"),
                            (
                                "justice_system_exiting",
                                "B7 Bridge Housing for Persons Exiting Justice System Institutions",
                            ),
                            ("lgbtq", "LGBTQ"),
                            ("men", "Men"),
                            ("seniors", "Seniors (55+)"),
                            ("veterans", "Veterans"),
                            ("women", "Women"),
                            ("youth", "Youth (TAY)"),
                        ],
                        choices_enum=shelters.enums.PopulationChoices,
                        max_length=36,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShelterEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("phone", phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ("website", models.URLField(blank=True, null=True)),
                ("description", django_ckeditor_5.fields.CKEditor5Field(null=True)),
                ("how_to_enter", django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ("mandatory_worship_attendance", models.BooleanField(blank=True, null=True)),
                (
                    "city_district",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(15),
                        ],
                        verbose_name="LA City Council District (1-15)",
                    ),
                ),
                (
                    "supervisorial_district",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Supervisorial District (1-5)",
                    ),
                ),
                ("curfew", models.TimeField(blank=True, null=True)),
                ("max_stay", models.PositiveIntegerField(blank=True, null=True, verbose_name="Max Stay (days)")),
                ("security", models.BooleanField(blank=True, null=True)),
                ("drugs", models.BooleanField(blank=True, null=True)),
                ("program_fees", models.BooleanField(blank=True, null=True)),
                ("fees", django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ("total_beds", models.PositiveIntegerField(blank=True, null=True)),
                ("is_reviewed", models.BooleanField(default=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ShelterTypeEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("a_bridge_home", "A Bridge Home"),
                            ("crisis_housing", "Crisis Housing"),
                            ("emergency_shelter", "Emergency Shelter"),
                            ("faith_based", "Faith Based"),
                            ("interim_housing", "Interim Housing"),
                            ("permanent_housing", "Permanent Housing"),
                            ("project_homekey", "Project Home Key (PHK)"),
                            ("rapid_rehousing", "Rapid Rehousing"),
                            ("recuperative_care", "Recuperative Care"),
                            ("roadmap_home", "Roadmap Home"),
                            ("safe_park_la", "Safe Park LA"),
                            ("sober_living", "Sober Living"),
                            ("tiny_home_village", "Tiny Home Village"),
                            ("transitional_housing", "Transitional Housing"),
                            ("winter_shelter", "Winter Shelter"),
                        ],
                        choices_enum=shelters.enums.ShelterChoices,
                        max_length=20,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SleepingOptionEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("bunk_beds", "Bunk beds"),
                            ("dormitory", "Dormitory"),
                            ("low_barrier", "Low Barrier"),
                            ("motel", "Motel"),
                            ("shared_rooms", "Shared Rooms"),
                            ("single_room", "Single Room"),
                        ],
                        choices_enum=shelters.enums.SleepingChoices,
                        max_length=12,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SPAEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.IntegerChoicesField(
                        blank=True,
                        choices=[
                            (1, "1 - Antelope Valley"),
                            (2, "2 - San Fernando"),
                            (3, "3 - San Gabriel"),
                            (4, "4 - Metro"),
                            (5, "5 - West"),
                            (6, "6 - South"),
                            (7, "7 - East"),
                            (8, "8 - South Bay/Harbor"),
                        ],
                        choices_enum=shelters.enums.SPAChoices,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="StorageEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.IntegerField()),
                (
                    "name",
                    django_choices_field.fields.TextChoicesField(
                        blank=True,
                        choices=[
                            ("amnesty_lockers", "Amnesty Lockers"),
                            ("lockers", "Lockers"),
                            ("storage", "Storage"),
                        ],
                        choices_enum=shelters.enums.StorageChoices,
                        max_length=15,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="accessibility",
            trigger=pgtrigger.compiler.Trigger(
                name="accessibility_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_accessibilityevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'accessibility.add\', NEW."id"); RETURN NULL;',
                    hash="1ac3b1b2434c7949c7d552a3ea26e52845ac46d0",
                    operation="INSERT",
                    pgid="pgtrigger_accessibility_add_insert_b06ef",
                    table="shelters_accessibility",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="accessibility",
            trigger=pgtrigger.compiler.Trigger(
                name="accessibility_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_accessibilityevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'accessibility.remove\', OLD."id"); RETURN NULL;',
                    hash="a84c08f749896284f1e089efd280bb5e8ec3f3e6",
                    operation="DELETE",
                    pgid="pgtrigger_accessibility_remove_delete_d7f67",
                    table="shelters_accessibility",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="careerservice",
            trigger=pgtrigger.compiler.Trigger(
                name="career_service_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_careerserviceevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'career_service.add\', NEW."id"); RETURN NULL;',
                    hash="86436b09f53fb7ca40cb89fe463c5b41a242bc17",
                    operation="INSERT",
                    pgid="pgtrigger_career_service_add_insert_f7b6f",
                    table="shelters_careerservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="careerservice",
            trigger=pgtrigger.compiler.Trigger(
                name="career_service_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_careerserviceevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'career_service.remove\', OLD."id"); RETURN NULL;',
                    hash="99140c47abf219f7f2629b2f335bd945fb03b834",
                    operation="DELETE",
                    pgid="pgtrigger_career_service_remove_delete_2c864",
                    table="shelters_careerservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="city",
            trigger=pgtrigger.compiler.Trigger(
                name="cities_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_cityevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'cities.add\', NEW."id"); RETURN NULL;',
                    hash="d4c86382fe76344f4d25f405e748bc030af083f3",
                    operation="INSERT",
                    pgid="pgtrigger_cities_add_insert_838e0",
                    table="shelters_city",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="city",
            trigger=pgtrigger.compiler.Trigger(
                name="cities_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_cityevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'cities.remove\', OLD."id"); RETURN NULL;',
                    hash="8d9ac4195205757db51c1e131e597e35b1de0b5d",
                    operation="DELETE",
                    pgid="pgtrigger_cities_remove_delete_1bf9a",
                    table="shelters_city",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entryrequirement",
            trigger=pgtrigger.compiler.Trigger(
                name="entry_requirement_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_entryrequirementevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'entry_requirement.add\', NEW."id"); RETURN NULL;',
                    hash="92e5b825d3fd42c64fb907f27864a0c38107245d",
                    operation="INSERT",
                    pgid="pgtrigger_entry_requirement_add_insert_0f235",
                    table="shelters_entryrequirement",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="entryrequirement",
            trigger=pgtrigger.compiler.Trigger(
                name="entry_requirement_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_entryrequirementevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'entry_requirement.remove\', OLD."id"); RETURN NULL;',
                    hash="6c196904dd22d3273734f80924a13ec019cd5326",
                    operation="DELETE",
                    pgid="pgtrigger_entry_requirement_remove_delete_25d53",
                    table="shelters_entryrequirement",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="funder",
            trigger=pgtrigger.compiler.Trigger(
                name="funder_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_funderevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'funder.add\', NEW."id"); RETURN NULL;',
                    hash="1824de17024f6a7fc9895a2c3dee5410086de842",
                    operation="INSERT",
                    pgid="pgtrigger_funder_add_insert_0a17c",
                    table="shelters_funder",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="funder",
            trigger=pgtrigger.compiler.Trigger(
                name="funder_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_funderevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'funder.remove\', OLD."id"); RETURN NULL;',
                    hash="6f889c45e9d01e1192c771d8264cb208ea3ed8e9",
                    operation="DELETE",
                    pgid="pgtrigger_funder_remove_delete_5983d",
                    table="shelters_funder",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="generalservice",
            trigger=pgtrigger.compiler.Trigger(
                name="general_service_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_generalserviceevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'general_service.add\', NEW."id"); RETURN NULL;',
                    hash="a28f15d78063d7de34698b6ebbbcc38d6573736a",
                    operation="INSERT",
                    pgid="pgtrigger_general_service_add_insert_ac879",
                    table="shelters_generalservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="generalservice",
            trigger=pgtrigger.compiler.Trigger(
                name="general_service_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_generalserviceevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'general_service.remove\', OLD."id"); RETURN NULL;',
                    hash="38503ccc88315401e407b9b42f8f2981c875e06b",
                    operation="DELETE",
                    pgid="pgtrigger_general_service_remove_delete_bccf1",
                    table="shelters_generalservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="healthservice",
            trigger=pgtrigger.compiler.Trigger(
                name="health_service_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_healthserviceevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'health_service.add\', NEW."id"); RETURN NULL;',
                    hash="0092cdf83fce41ecbeaaefddfe9de360df73aab3",
                    operation="INSERT",
                    pgid="pgtrigger_health_service_add_insert_7528e",
                    table="shelters_healthservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="healthservice",
            trigger=pgtrigger.compiler.Trigger(
                name="health_service_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_healthserviceevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'health_service.remove\', OLD."id"); RETURN NULL;',
                    hash="a79cffae685d1abb4e9f0a0e4022783b65d00e68",
                    operation="DELETE",
                    pgid="pgtrigger_health_service_remove_delete_2668d",
                    table="shelters_healthservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="immediateneed",
            trigger=pgtrigger.compiler.Trigger(
                name="immediate_need_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_immediateneedevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'immediate_need.add\', NEW."id"); RETURN NULL;',
                    hash="59d3a76f8a224bd21db98f048f4b8c5e5f23a6e7",
                    operation="INSERT",
                    pgid="pgtrigger_immediate_need_add_insert_d82ac",
                    table="shelters_immediateneed",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="immediateneed",
            trigger=pgtrigger.compiler.Trigger(
                name="immediate_need_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_immediateneedevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'immediate_need.remove\', OLD."id"); RETURN NULL;',
                    hash="0db68a1197eccdede77dc6435ebcda4e8bc4a668",
                    operation="DELETE",
                    pgid="pgtrigger_immediate_need_remove_delete_0d1e3",
                    table="shelters_immediateneed",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="parking",
            trigger=pgtrigger.compiler.Trigger(
                name="parking_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_parkingevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'parking.add\', NEW."id"); RETURN NULL;',
                    hash="d4ca6bc1d6af77b80622f201f3844a2dc7edcdc9",
                    operation="INSERT",
                    pgid="pgtrigger_parking_add_insert_8a7a8",
                    table="shelters_parking",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="parking",
            trigger=pgtrigger.compiler.Trigger(
                name="parking_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_parkingevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'parking.remove\', OLD."id"); RETURN NULL;',
                    hash="d150fbd493e3079f2fc63471b9f1dc9ad2f0c44c",
                    operation="DELETE",
                    pgid="pgtrigger_parking_remove_delete_9c2e4",
                    table="shelters_parking",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="pet",
            trigger=pgtrigger.compiler.Trigger(
                name="pet_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_petevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'pet.add\', NEW."id"); RETURN NULL;',
                    hash="9320551c98cae189366315595bbeb87e64cfefba",
                    operation="INSERT",
                    pgid="pgtrigger_pet_add_insert_ef222",
                    table="shelters_pet",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="pet",
            trigger=pgtrigger.compiler.Trigger(
                name="pet_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_petevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'pet.remove\', OLD."id"); RETURN NULL;',
                    hash="13ae8e36cc92e6797e7b267732c7eaa8ec1ec529",
                    operation="DELETE",
                    pgid="pgtrigger_pet_remove_delete_b8f70",
                    table="shelters_pet",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="population",
            trigger=pgtrigger.compiler.Trigger(
                name="population_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_populationevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'population.add\', NEW."id"); RETURN NULL;',
                    hash="49b3e3a107f5c733fa23f310b061458c1c98529b",
                    operation="INSERT",
                    pgid="pgtrigger_population_add_insert_7c4b4",
                    table="shelters_population",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="population",
            trigger=pgtrigger.compiler.Trigger(
                name="population_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_populationevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'population.remove\', OLD."id"); RETURN NULL;',
                    hash="3a5475c0de2407e833704ad93ed4026a06419252",
                    operation="DELETE",
                    pgid="pgtrigger_population_remove_delete_6a89a",
                    table="shelters_population",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shelter",
            trigger=pgtrigger.compiler.Trigger(
                name="shelter_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_shelterevent" ("address_id", "city_district", "created_at", "curfew", "description", "drugs", "email", "fees", "how_to_enter", "id", "is_reviewed", "mandatory_worship_attendance", "max_stay", "name", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "phone", "program_fees", "security", "supervisorial_district", "total_beds", "updated_at", "website") VALUES (NEW."address_id", NEW."city_district", NEW."created_at", NEW."curfew", NEW."description", NEW."drugs", NEW."email", NEW."fees", NEW."how_to_enter", NEW."id", NEW."is_reviewed", NEW."mandatory_worship_attendance", NEW."max_stay", NEW."name", NEW."organization_id", _pgh_attach_context(), NOW(), \'shelter.add\', NEW."id", NEW."phone", NEW."program_fees", NEW."security", NEW."supervisorial_district", NEW."total_beds", NEW."updated_at", NEW."website"); RETURN NULL;',
                    hash="715c0b0fbe8ababd5270683927fc1ed62e1b8bf6",
                    operation="INSERT",
                    pgid="pgtrigger_shelter_add_insert_6bdb6",
                    table="shelters_shelter",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shelter",
            trigger=pgtrigger.compiler.Trigger(
                name="shelter_update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "shelters_shelterevent" ("address_id", "city_district", "created_at", "curfew", "description", "drugs", "email", "fees", "how_to_enter", "id", "is_reviewed", "mandatory_worship_attendance", "max_stay", "name", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "phone", "program_fees", "security", "supervisorial_district", "total_beds", "updated_at", "website") VALUES (NEW."address_id", NEW."city_district", NEW."created_at", NEW."curfew", NEW."description", NEW."drugs", NEW."email", NEW."fees", NEW."how_to_enter", NEW."id", NEW."is_reviewed", NEW."mandatory_worship_attendance", NEW."max_stay", NEW."name", NEW."organization_id", _pgh_attach_context(), NOW(), \'shelter.update\', NEW."id", NEW."phone", NEW."program_fees", NEW."security", NEW."supervisorial_district", NEW."total_beds", NEW."updated_at", NEW."website"); RETURN NULL;',
                    hash="3247c7dbc1ecb3f26fa9778fb47a75d9100bd174",
                    operation="UPDATE",
                    pgid="pgtrigger_shelter_update_update_086d2",
                    table="shelters_shelter",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shelter",
            trigger=pgtrigger.compiler.Trigger(
                name="shelter_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_shelterevent" ("address_id", "city_district", "created_at", "curfew", "description", "drugs", "email", "fees", "how_to_enter", "id", "is_reviewed", "mandatory_worship_attendance", "max_stay", "name", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "phone", "program_fees", "security", "supervisorial_district", "total_beds", "updated_at", "website") VALUES (OLD."address_id", OLD."city_district", OLD."created_at", OLD."curfew", OLD."description", OLD."drugs", OLD."email", OLD."fees", OLD."how_to_enter", OLD."id", OLD."is_reviewed", OLD."mandatory_worship_attendance", OLD."max_stay", OLD."name", OLD."organization_id", _pgh_attach_context(), NOW(), \'shelter.remove\', OLD."id", OLD."phone", OLD."program_fees", OLD."security", OLD."supervisorial_district", OLD."total_beds", OLD."updated_at", OLD."website"); RETURN NULL;',
                    hash="b2d79b22ae13b34e9c7d6111535d4edc328d741a",
                    operation="DELETE",
                    pgid="pgtrigger_shelter_remove_delete_928d6",
                    table="shelters_shelter",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="sheltertype",
            trigger=pgtrigger.compiler.Trigger(
                name="shelter_type_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_sheltertypeevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'shelter_type.add\', NEW."id"); RETURN NULL;',
                    hash="9d592f9b42cc91196b5043d129cb43eb3c1957a4",
                    operation="INSERT",
                    pgid="pgtrigger_shelter_type_add_insert_aac66",
                    table="shelters_sheltertype",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="sheltertype",
            trigger=pgtrigger.compiler.Trigger(
                name="shelter_type_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_sheltertypeevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'shelter_type.remove\', OLD."id"); RETURN NULL;',
                    hash="bf5fe741dcd1d5cfa9eaf4a8d7a204529ed46724",
                    operation="DELETE",
                    pgid="pgtrigger_shelter_type_remove_delete_513ad",
                    table="shelters_sheltertype",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="sleepingoption",
            trigger=pgtrigger.compiler.Trigger(
                name="sleeping_option_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_sleepingoptionevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'sleeping_option.add\', NEW."id"); RETURN NULL;',
                    hash="34f17c1dc67fb69d754c4619971d56ba8ee4f790",
                    operation="INSERT",
                    pgid="pgtrigger_sleeping_option_add_insert_4ae18",
                    table="shelters_sleepingoption",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="sleepingoption",
            trigger=pgtrigger.compiler.Trigger(
                name="sleeping_option_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_sleepingoptionevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'sleeping_option.remove\', OLD."id"); RETURN NULL;',
                    hash="be8f0ed9ab95112fccf08679fcd2e05a09d4b188",
                    operation="DELETE",
                    pgid="pgtrigger_sleeping_option_remove_delete_a6deb",
                    table="shelters_sleepingoption",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="spa",
            trigger=pgtrigger.compiler.Trigger(
                name="spa_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_spaevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'spa.add\', NEW."id"); RETURN NULL;',
                    hash="732e96f1cff29705e99bdaffee094ac5fc332f63",
                    operation="INSERT",
                    pgid="pgtrigger_spa_add_insert_22817",
                    table="shelters_spa",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="spa",
            trigger=pgtrigger.compiler.Trigger(
                name="spa_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_spaevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'spa.remove\', OLD."id"); RETURN NULL;',
                    hash="e2aba5318a35cb93b6a82d09952f91bc25865e34",
                    operation="DELETE",
                    pgid="pgtrigger_spa_remove_delete_345c3",
                    table="shelters_spa",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="storage",
            trigger=pgtrigger.compiler.Trigger(
                name="storage_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_storageevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (NEW."id", NEW."name", _pgh_attach_context(), NOW(), \'storage.add\', NEW."id"); RETURN NULL;',
                    hash="86c70218b491133a5bb62e0474a1b602f36b36df",
                    operation="INSERT",
                    pgid="pgtrigger_storage_add_insert_e0166",
                    table="shelters_storage",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="storage",
            trigger=pgtrigger.compiler.Trigger(
                name="storage_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "shelters_storageevent" ("id", "name", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id") VALUES (OLD."id", OLD."name", _pgh_attach_context(), NOW(), \'storage.remove\', OLD."id"); RETURN NULL;',
                    hash="caad4156b6f764d8484860bab9abf46914fdec75",
                    operation="DELETE",
                    pgid="pgtrigger_storage_remove_delete_3a5cb",
                    table="shelters_storage",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddField(
            model_name="accessibilityevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="accessibilityevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.accessibility",
            ),
        ),
        migrations.AddField(
            model_name="careerserviceevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="careerserviceevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.careerservice",
            ),
        ),
        migrations.AddField(
            model_name="cityevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="cityevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.city",
            ),
        ),
        migrations.AddField(
            model_name="entryrequirementevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="entryrequirementevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.entryrequirement",
            ),
        ),
        migrations.AddField(
            model_name="funderevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="funderevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.funder",
            ),
        ),
        migrations.AddField(
            model_name="generalserviceevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="generalserviceevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.generalservice",
            ),
        ),
        migrations.AddField(
            model_name="healthserviceevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="healthserviceevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.healthservice",
            ),
        ),
        migrations.AddField(
            model_name="immediateneedevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="immediateneedevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.immediateneed",
            ),
        ),
        migrations.AddField(
            model_name="parkingevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="parkingevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.parking",
            ),
        ),
        migrations.AddField(
            model_name="petevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="petevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.pet",
            ),
        ),
        migrations.AddField(
            model_name="populationevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="populationevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.population",
            ),
        ),
        migrations.AddField(
            model_name="shelterevent",
            name="address",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="common.address",
            ),
        ),
        migrations.AddField(
            model_name="shelterevent",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                related_query_name="+",
                to="organizations.organization",
            ),
        ),
        migrations.AddField(
            model_name="shelterevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="shelterevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.shelter",
            ),
        ),
        migrations.AddField(
            model_name="sheltertypeevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="sheltertypeevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.sheltertype",
            ),
        ),
        migrations.AddField(
            model_name="sleepingoptionevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="sleepingoptionevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.sleepingoption",
            ),
        ),
        migrations.AddField(
            model_name="spaevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="spaevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.spa",
            ),
        ),
        migrations.AddField(
            model_name="storageevent",
            name="pgh_context",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="+",
                to="pghistory.context",
            ),
        ),
        migrations.AddField(
            model_name="storageevent",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="events",
                to="shelters.storage",
            ),
        ),
    ]
