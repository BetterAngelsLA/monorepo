# Generated by Django 5.2.4 on 2025-07-31 03:35

from django.db import migrations
from tasks.permissions import TaskPermissions


def create_permissions_if_not_exist(apps, schema_editor):
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")
    db_alias = schema_editor.connection.alias

    # Create Task permissions and add to Caseworker group template
    Task = apps.get_model("tasks", "Task")
    ContentType = ContentType.objects.get_for_model(Task)
    PERM_MAP = {perm.split(".")[1]: perm.label for perm in TaskPermissions}

    for codename, name in PERM_MAP.items():
        cur_perm = Permission.objects.using(db_alias).create(
            codename=codename,
            content_type=ContentType,
        )
        cur_perm.name = name
        cur_perm.save()


def update_caseworker_permission_template(apps, schema_editor):
    PermissionGroupTemplate = apps.get_model("accounts", "PermissionGroupTemplate")
    Permission = apps.get_model("auth", "Permission")
    caseworker_template = PermissionGroupTemplate.objects.get(name="Caseworker")

    perm_map = [
        perm.split(".")[1]
        for perm in [
            "tasks.add_task",
            "tasks.view_task",
        ]
    ]

    permissions = Permission.objects.filter(codename__in=perm_map)
    caseworker_template.permissions.add(*permissions)


class Migration(migrations.Migration):

    dependencies = [
        ("tasks", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_permissions_if_not_exist),
        migrations.RunPython(update_caseworker_permission_template),
    ]
