# Generated by Django A.B on YYYY-MM-DD HH:MM
from accounts.groups import GroupTemplateNames
from django.db import migrations, models
from django.core.exceptions import ObjectDoesNotExist
from notes.permissions import NotePermissions

PERM_MAP = [
    perm.split(".")[1]
    for perm in [
        NotePermissions.ADD,
        NotePermissions.CHANGE,
        NotePermissions.DELETE,
        NotePermissions.VIEW,
    ]
]


def create_caseworker_permission_template(apps, schema_editor):
    PermissionGroupTemplate = apps.get_model("accounts", "PermissionGroupTemplate")
    Permission = apps.get_model("auth", "Permission")
    caseworker_template = PermissionGroupTemplate.objects.create(
        name=GroupTemplateNames.CASEWORKER
    )

    permission = Permission.objects.filter(
        codename__in=PERM_MAP,
    )
    caseworker_template.permissions.set(permission)


def delete_old_caseworker_group(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    caseworker_group = Group.objects.get(name=GroupTemplateNames.CASEWORKER)
    caseworker_group.delete()


class Migration(migrations.Migration):
    dependencies = [
        ("notes", "0003_add_casemanager_note_permissions"),
    ]

    operations = [
        migrations.RunPython(create_caseworker_permission_template),
        migrations.RunPython(delete_old_caseworker_group),
    ]
