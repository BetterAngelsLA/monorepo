# Generated by Django 5.2.4 on 2025-08-12 17:53

import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("notes", "0020_remove_note_next_steps_remove_note_purposes_and_more"),
        ("organizations", "0006_alter_organization_slug"),
        ("pghistory", "0007_auto_20250421_0444"),
    ]

    operations = [
        migrations.CreateModel(
            name="OrganizationServiceCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("priority", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "organization",
                    models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="organizations.organization"),
                ),
            ],
            options={
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="OrganizationService",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("service", models.CharField(max_length=100)),
                ("priority", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="services",
                        to="organizations.organization",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="services",
                        to="notes.organizationservicecategory",
                    ),
                ),
            ],
            options={
                "ordering": ("service",),
            },
        ),
        migrations.CreateModel(
            name="OrganizationServiceCategoryEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                ("priority", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "organization",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="organizations.organization",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="events",
                        to="notes.organizationservicecategory",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrganizationServiceEvent",
            fields=[
                ("pgh_id", models.AutoField(primary_key=True, serialize=False)),
                ("pgh_created_at", models.DateTimeField(auto_now_add=True)),
                ("pgh_label", models.TextField(help_text="The event label.")),
                ("id", models.BigIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("service", models.CharField(max_length=100)),
                ("priority", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="notes.organizationservicecategory",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        related_query_name="+",
                        to="organizations.organization",
                    ),
                ),
                (
                    "pgh_context",
                    models.ForeignKey(
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pghistory.context",
                    ),
                ),
                (
                    "pgh_obj",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="events",
                        to="notes.organizationservice",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="organizationservicecategory",
            constraint=models.UniqueConstraint(models.F("name"), models.F("organization"), name="unique_name_org"),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservicecategory",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_category_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "notes_organizationservicecategoryevent" ("created_at", "id", "name", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "updated_at") VALUES (NEW."created_at", NEW."id", NEW."name", NEW."organization_id", _pgh_attach_context(), NOW(), \'org_service_category.add\', NEW."id", NEW."priority", NEW."updated_at"); RETURN NULL;',
                    hash="9a66af6627eba798f0a7ec14e2b5e92d80d91931",
                    operation="INSERT",
                    pgid="pgtrigger_org_service_category_add_insert_8b251",
                    table="notes_organizationservicecategory",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservicecategory",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_category_update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "notes_organizationservicecategoryevent" ("created_at", "id", "name", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "updated_at") VALUES (NEW."created_at", NEW."id", NEW."name", NEW."organization_id", _pgh_attach_context(), NOW(), \'org_service_category.update\', NEW."id", NEW."priority", NEW."updated_at"); RETURN NULL;',
                    hash="5afeb4e49528d6193fc6e89b2d3a3b72c702825f",
                    operation="UPDATE",
                    pgid="pgtrigger_org_service_category_update_update_e8440",
                    table="notes_organizationservicecategory",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservicecategory",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_category_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "notes_organizationservicecategoryevent" ("created_at", "id", "name", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "updated_at") VALUES (OLD."created_at", OLD."id", OLD."name", OLD."organization_id", _pgh_attach_context(), NOW(), \'org_service_category.remove\', OLD."id", OLD."priority", OLD."updated_at"); RETURN NULL;',
                    hash="7304823a3a0d8ad6852e9a8e47895b088d951543",
                    operation="DELETE",
                    pgid="pgtrigger_org_service_category_remove_delete_aaac1",
                    table="notes_organizationservicecategory",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddConstraint(
            model_name="organizationservice",
            constraint=models.UniqueConstraint(
                models.F("service"), models.F("organization"), name="unique_service_org"
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservice",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "notes_organizationserviceevent" ("category_id", "created_at", "id", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "service", "updated_at") VALUES (NEW."category_id", NEW."created_at", NEW."id", NEW."organization_id", _pgh_attach_context(), NOW(), \'org_service.add\', NEW."id", NEW."priority", NEW."service", NEW."updated_at"); RETURN NULL;',
                    hash="e03a60c734bdf23e04d5042913b97ef767a532e9",
                    operation="INSERT",
                    pgid="pgtrigger_org_service_add_insert_aa515",
                    table="notes_organizationservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservice",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "notes_organizationserviceevent" ("category_id", "created_at", "id", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "service", "updated_at") VALUES (NEW."category_id", NEW."created_at", NEW."id", NEW."organization_id", _pgh_attach_context(), NOW(), \'org_service.update\', NEW."id", NEW."priority", NEW."service", NEW."updated_at"); RETURN NULL;',
                    hash="835dee419d99cca7b1f6d5181e525305fe7a4116",
                    operation="UPDATE",
                    pgid="pgtrigger_org_service_update_update_f2016",
                    table="notes_organizationservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservice",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "notes_organizationserviceevent" ("category_id", "created_at", "id", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "service", "updated_at") VALUES (OLD."category_id", OLD."created_at", OLD."id", OLD."organization_id", _pgh_attach_context(), NOW(), \'org_service.remove\', OLD."id", OLD."priority", OLD."service", OLD."updated_at"); RETURN NULL;',
                    hash="1e2fdf737b43bc681ab1d85dcc077e0886a5cb7a",
                    operation="DELETE",
                    pgid="pgtrigger_org_service_remove_delete_14722",
                    table="notes_organizationservice",
                    when="AFTER",
                ),
            ),
        ),
    ]
