# Generated by Django 5.2.5 on 2025-08-27 21:46

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("notes", "0025_servicerequest_service_use_fk"),
        ("organizations", "0006_alter_organization_slug"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="organizationservice",
            name="org_service_add_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="organizationservice",
            name="org_service_update_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="organizationservice",
            name="org_service_remove_delete",
        ),
        migrations.RemoveConstraint(
            model_name="organizationservice",
            name="unique_service_org",
        ),
        migrations.RenameField(
            model_name="organizationservice",
            old_name="service",
            new_name="label",
        ),
        migrations.RenameField(
            model_name="organizationserviceevent",
            old_name="service",
            new_name="label",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservice",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_add_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "notes_organizationserviceevent" ("category_id", "created_at", "id", "label", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "updated_at") VALUES (NEW."category_id", NEW."created_at", NEW."id", NEW."label", NEW."organization_id", _pgh_attach_context(), NOW(), \'org_service.add\', NEW."id", NEW."priority", NEW."updated_at"); RETURN NULL;',
                    hash="064e642b6374f88cbc00928007912d1ec8c3c3c2",
                    operation="INSERT",
                    pgid="pgtrigger_org_service_add_insert_aa515",
                    table="notes_organizationservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservice",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_update_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "notes_organizationserviceevent" ("category_id", "created_at", "id", "label", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "updated_at") VALUES (NEW."category_id", NEW."created_at", NEW."id", NEW."label", NEW."organization_id", _pgh_attach_context(), NOW(), \'org_service.update\', NEW."id", NEW."priority", NEW."updated_at"); RETURN NULL;',
                    hash="ec28cd95966e192b1385c009290861dd33520be3",
                    operation="UPDATE",
                    pgid="pgtrigger_org_service_update_update_f2016",
                    table="notes_organizationservice",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="organizationservice",
            trigger=pgtrigger.compiler.Trigger(
                name="org_service_remove_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "notes_organizationserviceevent" ("category_id", "created_at", "id", "label", "organization_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "priority", "updated_at") VALUES (OLD."category_id", OLD."created_at", OLD."id", OLD."label", OLD."organization_id", _pgh_attach_context(), NOW(), \'org_service.remove\', OLD."id", OLD."priority", OLD."updated_at"); RETURN NULL;',
                    hash="449318344ae8eb1100823d4c8257e02355c604bc",
                    operation="DELETE",
                    pgid="pgtrigger_org_service_remove_delete_14722",
                    table="notes_organizationservice",
                    when="AFTER",
                ),
            ),
        ),
        migrations.AddConstraint(
            model_name="organizationservice",
            constraint=models.UniqueConstraint(models.F("label"), models.F("organization"), name="unique_label_org"),
        ),
    ]
