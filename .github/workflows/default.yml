name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

env:
  AWS_REGION: us-west-2
  AWS_ACCOUNT_ID: 174477281453
  ASSUMED_ROLE: arn:aws:iam::174477281453:role/github-actions-oidc-role
  ECR_REGISTRY: 174477281453.dkr.ecr.us-west-2.amazonaws.com
  COMPOSE_FILE: docker-compose.yml:docker-compose-ci.yml

jobs:
  CIWorkflow:
    runs-on: ubuntu-latest
    permissions:
      actions: read # Required to find the last successful workflow run
      contents: read # Required for actions/checkout
      id-token: write # Required for requesting the JWT

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Probably can remove this
      - uses: nrwl/nx-set-shas@v4

      - name: Set Environment Variables
        run: |
          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c 1-7)
          if [ "$BRANCH_NAME" == "main" ]; then
            IMAGE_TAG_PREFIX="main"
          else
            IMAGE_TAG_PREFIX="dev-$BRANCH_NAME"
          fi
          DOCKER_TAG="$IMAGE_TAG_PREFIX-$SHORT_SHA"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "IMAGE_TAG_PREFIX=$IMAGE_TAG_PREFIX" >> $GITHUB_ENV
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "MONOREPO_IMAGE=${{ env.ECR_REGISTRY }}/monorepo" >> $GITHUB_ENV

      # This line is needed for nx affected to work when CI is running on a PR
      - if: env.BRANCH_NAME != 'main'
        run: git branch --track main origin/main
      - run: sudo chown -R 1000:1000 .git
      - run: sudo setfacl --modify user:1000:rw /var/run/docker.sock

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials and Login to Amazon ECR
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ASSUMED_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # Build and Push Monorepo Image for each commit
      - name: Build Monorepo Docker image
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          push: true
          platforms: linux/amd64
          cache-from: |
            type=registry,ref=${{ env.MONOREPO_IMAGE }}:buildcache-${{ env.BRANCH_NAME }}
            type=registry,ref=${{ env.MONOREPO_IMAGE }}:buildcache-main
          cache-to: |
            type=registry,ref=${{ env.MONOREPO_IMAGE }}:buildcache-${{ env.BRANCH_NAME }},image-manifest=true,mode=max
          tags: |
            ${{ env.MONOREPO_IMAGE }}:${{ env.DOCKER_TAG }}

      - name: Spin up monorepo environment
        run: |
          docker-compose up -d

      # - name: Lint
      #   run: |
      #     docker-compose run better-angels bash <<'EOF'
      #     # Exclude Betterangels Frontend Given its CI is not setup yet
      #     yarn nx affected -t lint --exclude=betterangels
      #     EOF

      # - name: Test
      #   run: |
      #     docker-compose run better-angels bash <<'EOF'
      #     # Exclude Betterangels Frontend Given its CI is not setup yet
      #     yarn nx affected -t test --exclude=betterangels
      #     EOF

      - name: Build and Push Artifacts
        run: |
          docker-compose run better-angels bash <<'EOF'
          docker buildx create --use
          docker login -u ${{ steps.ecr-login.outputs.username }} -p ${{ steps.ecr-login.outputs.password }} ${{ steps.ecr-login.outputs.registry }}
          # Exclude Betterangels Frontend Given its CI is not setup yet
          yarn nx affected -t build --exclude=betterangels --verbose
          EOF
        env:
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy Changes
        # if: env.BRANCH_NAME == 'main'
        run: |
          docker-compose run better-angels bash <<'EOF'
          # Exclude Betterangels Frontend Given its CI is not setup yet
          yarn nx affected -t deploy --exclude=betterangels --verbose
          EOF

      - name: Spin down monorepo environment
        if: always()
        run: |
          docker-compose down
          docker logout
