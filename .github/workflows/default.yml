name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

# TODO: these should probably be GitHub Env vars
env:
  AWS_REGION: us-west-2
  AWS_ACCOUNT_ID: 174477281453
  ASSUMED_ROLE: arn:aws:iam::174477281453:role/github-actions-oidc-role

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
      actions: 'read' # This is required to find the last successful workflow run

    # if: github.ref == 'refs/heads/main' # Ensure deploy only runs on the main branch
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          # Fetches all history for the current branch only
          fetch-depth: 0

      - name: Set Branch Name and Short SHA
        run: |
          echo "BRANCH_NAME=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
          echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV

      - name: Set Image Tag Prefix
        run: |
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            echo "IMAGE_TAG_PREFIX=main" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG_PREFIX=dev-${{ env.BRANCH_NAME }}" >> $GITHUB_ENV
          fi

      - name: Set Docker Tag
        run: |
          echo "DOCKER_TAG=${{ env.IMAGE_TAG_PREFIX }}-${{ env.SHORT_SHA }}" >> $GITHUB_ENV

      - name: Configure Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.17.1
          cache: yarn

      - name: Install Dependencies
        run: yarn install

      - uses: nrwl/nx-set-shas@v4
      # This line is needed for nx affected to work when CI is running on a PR
      - run: git branch --track main origin/main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ASSUMED_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        run: |
          yarn nx affected -t build
        env:
          AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the repo
  #       uses: actions/checkout@v3

  #     - name: Test the project
  #       run: echo "Add your test commands here"
  # Package up imagedefinition.jsons
  # deploy:
