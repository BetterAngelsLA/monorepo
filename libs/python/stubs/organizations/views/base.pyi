from _typeshed import Incomplete
from django.views.generic import CreateView, DeleteView, DetailView, FormView, ListView, UpdateView
from organizations.backends import invitation_backend as invitation_backend, registration_backend as registration_backend
from organizations.forms import OrganizationAddForm as OrganizationAddForm, OrganizationForm as OrganizationForm, OrganizationUserAddForm as OrganizationUserAddForm, OrganizationUserForm as OrganizationUserForm, SignUpForm as SignUpForm
from organizations.utils import create_organization as create_organization
from organizations.views.mixins import OrganizationMixin as OrganizationMixin, OrganizationUserMixin as OrganizationUserMixin

class BaseOrganizationList(ListView):
    context_object_name: str
    def get_queryset(self): ...

class BaseOrganizationDetail(OrganizationMixin, DetailView):
    def get_context_data(self, **kwargs): ...

class BaseOrganizationCreate(CreateView):
    form_class = OrganizationAddForm
    template_name: str
    def get_success_url(self): ...
    def get_form_kwargs(self): ...

class BaseOrganizationUpdate(OrganizationMixin, UpdateView):
    form_class = OrganizationForm
    def get_form_kwargs(self): ...

class BaseOrganizationDelete(OrganizationMixin, DeleteView):
    def get_success_url(self): ...

class BaseOrganizationUserList(OrganizationMixin, ListView):
    organization: Incomplete
    object_list: Incomplete
    def get(self, request, *args, **kwargs): ...

class BaseOrganizationUserDetail(OrganizationUserMixin, DetailView): ...

class BaseOrganizationUserCreate(OrganizationMixin, CreateView):
    form_class = OrganizationUserAddForm
    template_name: str
    def get_success_url(self): ...
    def get_form_kwargs(self): ...
    organization: Incomplete
    def get(self, request, *args, **kwargs): ...
    def post(self, request, *args, **kwargs): ...

class BaseOrganizationUserRemind(OrganizationUserMixin, DetailView):
    template_name: str
    def get_success_url(self): ...
    object: Incomplete
    def get(self, request, *args, **kwargs): ...
    def post(self, request, *args, **kwargs): ...

class BaseOrganizationUserUpdate(OrganizationUserMixin, UpdateView):
    form_class = OrganizationUserForm

class BaseOrganizationUserDelete(OrganizationUserMixin, DeleteView):
    def get_success_url(self): ...

class OrganizationSignup(FormView):
    form_class = SignUpForm
    template_name: str
    backend: Incomplete
    def dispatch(self, request, *args, **kwargs): ...
    def get_success_url(self): ...
    def form_valid(self, form): ...

class ViewFactory:
    org_model: Incomplete
    def __init__(self, org_model) -> None: ...
    @property
    def OrganizationList(self): ...
    @property
    def OrganizationDetail(self): ...
    @property
    def OrganizationCreate(self): ...
    @property
    def OrganizationUpdate(self): ...
    @property
    def OrganizationDelete(self): ...
    @property
    def OrganizationUserList(self): ...
    @property
    def OrganizationUserDetail(self): ...
    @property
    def OrganizationUserUpdate(self): ...
    @property
    def OrganizationUserCreate(self): ...
    @property
    def OrganizationUserDelete(self): ...
    @property
    def OrganizationUserRemind(self): ...
