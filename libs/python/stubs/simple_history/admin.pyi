from .utils import get_history_manager_for_model as get_history_manager_for_model, get_history_model_for_model as get_history_model_for_model
from _typeshed import Incomplete
from django.contrib import admin

SIMPLE_HISTORY_EDIT: Incomplete

class SimpleHistoryAdmin(admin.ModelAdmin):
    object_history_template: str
    object_history_form_template: str
    def get_urls(self): ...
    def history_view(self, request, object_id, extra_context: Incomplete | None = ...): ...
    def history_view_title(self, request, obj): ...
    def response_change(self, request, obj): ...
    def history_form_view(self, request, object_id, version_id, extra_context: Incomplete | None = ...): ...
    def history_form_view_title(self, request, obj): ...
    def render_history_view(self, request, template, context, **kwargs): ...
    def save_model(self, request, obj, form, change) -> None: ...
    @property
    def content_type_model_cls(self): ...
    def revert_disabled(self, request, obj: Incomplete | None = ...): ...
    def has_view_permission(self, request, obj: Incomplete | None = ...): ...
    def has_change_permission(self, request, obj: Incomplete | None = ...): ...
    def has_view_or_change_permission(self, request, obj: Incomplete | None = ...): ...
    def has_view_history_or_change_history_permission(self, request, obj: Incomplete | None = ...): ...
    def has_view_history_permission(self, request, obj: Incomplete | None = ...): ...
    def has_change_history_permission(self, request, obj: Incomplete | None = ...): ...
    @property
    def enforce_history_permissions(self): ...
