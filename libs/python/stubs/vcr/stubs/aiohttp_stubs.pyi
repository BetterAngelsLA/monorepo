import asyncio
from _typeshed import Incomplete
from aiohttp import ClientResponse, streams
from vcr.errors import CannotOverwriteExistingCassetteException as CannotOverwriteExistingCassetteException
from vcr.request import Request as Request

log: Incomplete

class MockStream(asyncio.StreamReader, streams.AsyncStreamReaderMixin): ...

class MockClientResponse(ClientResponse):
    def __init__(self, method, url, request_info: Incomplete | None = ...) -> None: ...
    async def json(self, *, encoding: str = ..., loads=..., **kwargs): ...
    async def text(self, encoding: str = ..., errors: str = ...): ...
    async def read(self): ...
    def release(self) -> None: ...
    @property
    def content(self): ...

def build_response(vcr_request, vcr_response, history): ...
def play_responses(cassette, vcr_request, kwargs): ...
async def record_response(cassette, vcr_request, response) -> None: ...
async def record_responses(cassette, vcr_request, response) -> None: ...
def vcr_request(cassette, real_request): ...
