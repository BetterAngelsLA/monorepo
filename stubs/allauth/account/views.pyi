from . import app_settings as app_settings, signals as signals
from .adapter import get_adapter as get_adapter
from .forms import AddEmailForm as AddEmailForm, ChangePasswordForm as ChangePasswordForm, LoginForm as LoginForm, ResetPasswordForm as ResetPasswordForm, ResetPasswordKeyForm as ResetPasswordKeyForm, SetPasswordForm as SetPasswordForm, SignupForm as SignupForm, UserTokenForm as UserTokenForm
from .models import EmailAddress as EmailAddress, EmailConfirmation as EmailConfirmation, EmailConfirmationHMAC as EmailConfirmationHMAC
from .utils import complete_signup as complete_signup, get_login_redirect_url as get_login_redirect_url, get_next_redirect_url as get_next_redirect_url, logout_on_password_change as logout_on_password_change, passthrough_next_redirect_url as passthrough_next_redirect_url, perform_login as perform_login, send_email_confirmation as send_email_confirmation, sync_user_email_addresses as sync_user_email_addresses, url_str_to_user_pk as url_str_to_user_pk
from _typeshed import Incomplete
from allauth import ratelimit as ratelimit
from allauth.decorators import rate_limit as rate_limit
from allauth.exceptions import ImmediateHttpResponse as ImmediateHttpResponse
from allauth.utils import get_form_class as get_form_class, get_request_param as get_request_param
from django.views.generic.base import TemplateResponseMixin, TemplateView, View
from django.views.generic.edit import FormView

INTERNAL_RESET_SESSION_KEY: str
sensitive_post_parameters_m: Incomplete

class RedirectAuthenticatedUserMixin:
    def dispatch(self, request, *args, **kwargs): ...
    def get_authenticated_redirect_url(self): ...

class AjaxCapableProcessFormViewMixin:
    def get(self, request, *args, **kwargs): ...
    def post(self, request, *args, **kwargs): ...
    def get_form(self, form_class: Incomplete | None = ...): ...
    def get_ajax_data(self) -> None: ...

class LogoutFunctionalityMixin:
    def logout(self) -> None: ...

class LoginView(RedirectAuthenticatedUserMixin, AjaxCapableProcessFormViewMixin, FormView):
    form_class = LoginForm
    template_name: Incomplete
    success_url: Incomplete
    redirect_field_name: str
    def dispatch(self, request, *args, **kwargs): ...
    def get_form_kwargs(self): ...
    def get_form_class(self): ...
    def form_valid(self, form): ...
    def get_success_url(self): ...
    def get_context_data(self, **kwargs): ...

login: Incomplete

class CloseableSignupMixin:
    template_name_signup_closed: Incomplete
    def dispatch(self, request, *args, **kwargs): ...
    def is_open(self): ...
    def closed(self): ...

class SignupView(RedirectAuthenticatedUserMixin, CloseableSignupMixin, AjaxCapableProcessFormViewMixin, FormView):
    template_name: Incomplete
    form_class = SignupForm
    redirect_field_name: str
    success_url: Incomplete
    def dispatch(self, request, *args, **kwargs): ...
    def get_form_class(self): ...
    def get_success_url(self): ...
    user: Incomplete
    def form_valid(self, form): ...
    def get_context_data(self, **kwargs): ...

signup: Incomplete

class ConfirmEmailView(TemplateResponseMixin, LogoutFunctionalityMixin, View):
    template_name: Incomplete
    object: Incomplete
    def get(self, *args, **kwargs): ...
    def post(self, *args, **kwargs): ...
    def login_on_confirm(self, confirmation): ...
    def get_object(self, queryset: Incomplete | None = ...): ...
    def get_queryset(self): ...
    def get_context_data(self, **kwargs): ...
    def get_redirect_url(self): ...

confirm_email: Incomplete

class EmailView(AjaxCapableProcessFormViewMixin, FormView):
    template_name: Incomplete
    form_class = AddEmailForm
    success_url: Incomplete
    def get_form_class(self): ...
    def dispatch(self, request, *args, **kwargs): ...
    def get_form_kwargs(self): ...
    def form_valid(self, form): ...
    def post(self, request, *args, **kwargs): ...
    def get_context_data(self, **kwargs): ...
    def get_ajax_data(self): ...

email: Incomplete

class PasswordChangeView(AjaxCapableProcessFormViewMixin, FormView):
    template_name: Incomplete
    form_class = ChangePasswordForm
    success_url: Incomplete
    def get_form_class(self): ...
    def dispatch(self, request, *args, **kwargs): ...
    def render_to_response(self, context, **response_kwargs): ...
    def get_form_kwargs(self): ...
    def form_valid(self, form): ...
    def get_context_data(self, **kwargs): ...

password_change: Incomplete

class PasswordSetView(AjaxCapableProcessFormViewMixin, FormView):
    template_name: Incomplete
    form_class = SetPasswordForm
    success_url: Incomplete
    def get_form_class(self): ...
    def dispatch(self, request, *args, **kwargs): ...
    def render_to_response(self, context, **response_kwargs): ...
    def get_form_kwargs(self): ...
    def form_valid(self, form): ...
    def get_context_data(self, **kwargs): ...

password_set: Incomplete

class PasswordResetView(AjaxCapableProcessFormViewMixin, FormView):
    template_name: Incomplete
    form_class = ResetPasswordForm
    success_url: Incomplete
    redirect_field_name: str
    def get_form_class(self): ...
    def form_valid(self, form): ...
    def get_context_data(self, **kwargs): ...

password_reset: Incomplete

class PasswordResetDoneView(TemplateView):
    template_name: Incomplete

password_reset_done: Incomplete

class PasswordResetFromKeyView(AjaxCapableProcessFormViewMixin, LogoutFunctionalityMixin, FormView):
    template_name: Incomplete
    form_class = ResetPasswordKeyForm
    success_url: Incomplete
    reset_url_key: str
    def get_form_class(self): ...
    request: Incomplete
    key: Incomplete
    reset_user: Incomplete
    def dispatch(self, request, uidb36, key, **kwargs): ...
    def get_context_data(self, **kwargs): ...
    def get_form_kwargs(self): ...
    def form_valid(self, form): ...

password_reset_from_key: Incomplete

class PasswordResetFromKeyDoneView(TemplateView):
    template_name: Incomplete

password_reset_from_key_done: Incomplete

class LogoutView(TemplateResponseMixin, LogoutFunctionalityMixin, View):
    template_name: Incomplete
    redirect_field_name: str
    def get(self, *args, **kwargs): ...
    def post(self, *args, **kwargs): ...
    def get_context_data(self, **kwargs): ...
    def get_redirect_url(self): ...

logout: Incomplete

class AccountInactiveView(TemplateView):
    template_name: Incomplete

account_inactive: Incomplete

class EmailVerificationSentView(TemplateView):
    template_name: Incomplete

email_verification_sent: Incomplete
