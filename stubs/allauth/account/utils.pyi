from _typeshed import Incomplete
from allauth.account import app_settings as app_settings, signals as signals
from allauth.account.adapter import get_adapter as get_adapter
from allauth.exceptions import ImmediateHttpResponse as ImmediateHttpResponse
from allauth.utils import get_request_param as get_request_param, get_user_model as get_user_model, import_callable as import_callable, valid_email_or_none as valid_email_or_none

def get_next_redirect_url(request, redirect_field_name: str = ...): ...
def get_login_redirect_url(request, url: Incomplete | None = ..., redirect_field_name: str = ..., signup: bool = ...): ...
def logout_on_password_change(request, user) -> None: ...
def default_user_display(user): ...
def user_display(user): ...
def user_field(user, field, *args): ...
def user_username(user, *args): ...
def user_email(user, *args): ...
def has_verified_email(user, email: Incomplete | None = ...): ...
def perform_login(request, user, email_verification, redirect_url: Incomplete | None = ..., signal_kwargs: Incomplete | None = ..., signup: bool = ..., email: Incomplete | None = ...): ...
def complete_signup(request, user, email_verification, success_url, signal_kwargs: Incomplete | None = ...): ...
def cleanup_email_addresses(request, addresses): ...
def setup_user_email(request, user, addresses): ...
def send_email_confirmation(request, user, signup: bool = ..., email: Incomplete | None = ...) -> None: ...
def sync_user_email_addresses(user) -> None: ...
def filter_users_by_username(*username): ...
def filter_users_by_email(email, is_active: Incomplete | None = ...): ...
def passthrough_next_redirect_url(request, url, redirect_field_name): ...
def user_pk_to_url_str(user): ...
def url_str_to_user_pk(s): ...
