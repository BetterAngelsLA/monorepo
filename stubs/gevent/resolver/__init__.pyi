"""
This type stub file was generated by pyright.
"""

import _socket
from _socket import AF_INET, AF_UNSPEC, AI_CANONNAME, AI_NUMERICHOST, AI_PASSIVE, EAI_NONAME, EAI_SERVICE, SOCK_DGRAM, SOCK_STREAM, SOL_TCP, error, gaierror, getaddrinfo as native_getaddrinfo, gethostbyaddr as native_gethostbyaddr, gethostbyname as native_gethostbyname, gethostbyname_ex as native_gethostbyname_ex, getnameinfo as native_getnameinfo, getservbyname as native_getservbyname
from gevent._compat import MAC, PYPY, hostname_types, integer_types, string_types, text_type
from gevent.resolver._addresses import is_ipv6_addr

__all__ = ()
class AbstractResolver:
    HOSTNAME_ENCODING = ...
    _LOCAL_HOSTNAMES = ...
    _LOCAL_AND_BROADCAST_HOSTNAMES = ...
    EAI_NONAME_MSG = ...
    EAI_FAMILY_MSG = ...
    _KNOWN_ADDR_FAMILIES = ...
    _KNOWN_SOCKTYPES = ...
    def close(self): # -> None:
        """
        Release resources held by this object.

        Subclasses that define resources should override.

        .. versionadded:: 22.10.1
        """
        ...
    
    @staticmethod
    def fixup_gaierror(func): # -> _Wrapped[(...), Unknown, (self: Unknown, *args: Unknown, **kwargs: Unknown), Unknown]:
        ...
    
    def gethostbyname(self, hostname, family=...): # -> str:
        ...
    
    def gethostbyname_ex(self, hostname, family=...): # -> tuple[str, list[str], list[str]] | tuple[str | Unknown, list[Unknown], list[Unknown]]:
        ...
    
    def getaddrinfo(self, host, port, family=..., socktype=..., proto=..., flags=...): # -> list[tuple[int, int, int, str, tuple[str, int] | tuple[str, int, int, int]]]:
        ...
    
    def gethostbyaddr(self, ip_address): # -> tuple[str, list[str], list[str]]:
        ...
    
    def getnameinfo(self, sockaddr, flags): # -> tuple[str, str]:
        ...
    


