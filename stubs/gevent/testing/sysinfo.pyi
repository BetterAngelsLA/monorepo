"""
This type stub file was generated by pyright.
"""

import sys

VERBOSE = ...
PYPY = ...
CPYTHON = ...
WIN = ...
LINUX = ...
OSX = ...
PURE_PYTHON = ...
get_this_psutil_process = ...
LIBUV = ...
CFFI_BACKEND = ...
if '--debug-greentest' in sys.argv:
    DEBUG = ...
else:
    DEBUG = ...
RUN_LEAKCHECKS = ...
RUN_COVERAGE = ...
PLATFORM_SPECIFIC_SUFFIXES = ...
if WIN:
    ...
PY2 = ...
PY3 = ...
PY35 = ...
PY36 = ...
PY37 = ...
PY38 = ...
PY39 = ...
PY310 = ...
PY311 = ...
PY312 = ...
NON_APPLICABLE_SUFFIXES = ...
if sys.version_info[0] == 3:
    PY2 = ...
    PY3 = ...
else:
    ...
PYPY3 = ...
PY27_ONLY = ...
PYGTE279 = ...
if WIN:
    SHARED_OBJECT_EXTENSION = ...
else:
    SHARED_OBJECT_EXTENSION = ...
RUNNING_ON_GITHUB_ACTIONS = ...
RUNNING_ON_TRAVIS = ...
RUNNING_ON_APPVEYOR = ...
RUNNING_ON_CI = ...
RUNNING_ON_MANYLINUX = ...
RUNNING_ON_MUSLLINUX = ...
if RUNNING_ON_APPVEYOR:
    ...
EXPECT_POOR_TIMER_RESOLUTION = ...
CONN_ABORTED_ERRORS = ...
CONN_ABORTED_ERRORS = ...
CONN_REFUSED_ERRORS = ...
RESOLVER_ARES = ...
RESOLVER_DNSPYTHON = ...
RESOLVER_NOT_SYSTEM = ...
def get_python_version(): # -> str:
    """
    Return a string of the simple python version,
    such as '3.8.0b4'. Handles alpha, beta, release candidate, and final releases.
    """
    ...

def libev_supports_linux_aio(): # -> bool:
    ...

def libev_supports_linux_iouring(): # -> bool:
    ...

def resolver_dnspython_available(): # -> bool:
    ...

