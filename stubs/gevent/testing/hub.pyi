"""
This type stub file was generated by pyright.
"""

from contextlib import contextmanager
from gevent.hub import Hub

class QuietHub(Hub):
    _resolver = ...
    _threadpool = ...
    EXPECTED_TEST_ERROR = ...
    IGNORE_EXPECTED_TEST_ERROR = ...
    @contextmanager
    def ignoring_expected_test_error(self): # -> Generator[None, Any, None]:
        """
        Code in the body of this context manager will ignore
        ``EXPECTED_TEST_ERROR`` objects reported to ``handle_error``;
        they will not get a chance to go to the hub's parent.

        This completely changes the semantics of normal error handling
        by avoiding some switches (to the main greenlet, and eventually
        once a callback is processed, back to the hub). This should be used
        in narrow ways for test compatibility for tests that assume
        ``ExpectedException`` objects behave this way.
        """
        ...
    
    def handle_error(self, context, type, value, tb): # -> None:
        ...
    
    def print_exception(self, context, t, v, tb): # -> None:
        ...
    


