"""
This type stub file was generated by pyright.
"""

import sys
import os
from .sysinfo import CFFI_BACKEND, LIBUV, OSX, PY310, PY311, PY312, PY39, PYPY, PYPY3, RESOLVER_DNSPYTHON, RESOLVER_NOT_SYSTEM as ARES, RUNNING_ON_APPVEYOR as APPVEYOR, RUNNING_ON_MUSLLINUX, RUNNING_ON_TRAVIS as TRAVIS, RUN_COVERAGE, WIN

CPYTHON = ...
no_switch_tests = ...
ignore_switch_tests = ...
def make_re(tests): # -> Pattern[str]:
    ...

no_switch_tests = ...
ignore_switch_tests = ...
def get_switch_expected(fullname): # -> bool | None:
    """
    >>> get_switch_expected('test_patched_select.SelectTestCase.test_error_conditions')
    False
    >>> get_switch_expected('test_patched_socket.GeneralModuleTests.testCrucialConstants')
    False
    >>> get_switch_expected('test_patched_socket.SomeOtherTest.testHello')
    True
    >>> get_switch_expected("test_patched_httplib.BasicTest.test_bad_status_repr")
    False
    """
    ...

disabled_tests = ...
if OSX:
    ...
if PYPY:
    ...
if 'thread' in os.getenv('GEVENT_FILE', ''):
    ...
if LIBUV:
    ...
if RUN_COVERAGE and CFFI_BACKEND:
    ...
if PYPY and sys.pypy_version_info[: 2] == (7, 3):
    ...
if PYPY3 and TRAVIS:
    ...
if PYPY3 and WIN:
    ...
wrapped_tests = ...
class _PatchedTest:
    def __init__(self, test_fqn) -> None:
        ...
    
    def __call__(self, orig_test_fn): # -> _Wrapped[(...), Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]:
        ...
    


if OSX:
    ...
if WIN:
    ...
if PYPY:
    ...
if TRAVIS:
    ...
if PYPY3:
    ...
if PYPY:
    ...
if OSX:
    ...
if TRAVIS:
    ...
if ARES:
    ...
if APPVEYOR:
    ...
if sys.version_info[: 3] < (3, 8, 1):
    ...
if sys.version_info[: 3] < (3, 8, 10):
    ...
if RESOLVER_DNSPYTHON:
    ...
if OSX:
    ...
if PY39:
    ...
if PY310:
    ...
if PY311:
    ...
if PY312:
    ...
if TRAVIS:
    ...
if RUNNING_ON_MUSLLINUX:
    ...
_disabled_tests_by_file = ...
_wrapped_tests_by_file = ...
def disable_tests_in_source(source, filename): # -> str:
    ...

